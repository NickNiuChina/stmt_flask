<IfModule mod_ssl.c>

	# Pseudo Random Number Generator (PRNG):
	# Configure one or more sources to seed the PRNG of the SSL library.
	# The seed data should be of good random quality.
	# WARNING! On some platforms /dev/random blocks if not enough entropy
	# is available. This means you then cannot use the /dev/random device
	# because it would lead to very long connection times (as long as
	# it requires to make more entropy available). But usually those
	# platforms additionally provide a /dev/urandom device which doesn't
	# block. So, if available, use this one instead. Read the mod_ssl User
	# Manual for more details.
	#
	SSLRandomSeed startup builtin
	SSLRandomSeed startup file:/dev/urandom 512
	SSLRandomSeed connect builtin
	SSLRandomSeed connect file:/dev/urandom 512

	##
	##  SSL Global Context
	##
	##  All SSL configuration in this context applies both to
	##  the main server and all SSL-enabled virtual hosts.
	##

	#
	#   Some MIME-types for downloading Certificates and CRLs
	#
	AddType application/x-x509-ca-cert .crt
	AddType application/x-pkcs7-crl	.crl

	#   Pass Phrase Dialog:
	#   Configure the pass phrase gathering process.
	#   The filtering dialog program (`builtin' is a internal
	#   terminal dialog) has to provide the pass phrase on stdout.
	SSLPassPhraseDialog  exec:/usr/share/apache2/ask-for-passphrase

	#   Inter-Process Session Cache:
	#   Configure the SSL Session Cache: First the mechanism 
	#   to use and second the expiring timeout (in seconds).
	#   (The mechanism dbm has known memory leaks and should not be used).
	#SSLSessionCache		 dbm:${APACHE_RUN_DIR}/ssl_scache
	SSLSessionCache		shmcb:${APACHE_RUN_DIR}/ssl_scache(512000)
	SSLSessionCacheTimeout  300

	#   Semaphore:
	#   Configure the path to the mutual exclusion semaphore the
	#   SSL engine uses internally for inter-process synchronization. 
	#   (Disabled by default, the global Mutex directive consolidates by default
	#   this)
	#Mutex file:${APACHE_LOCK_DIR}/ssl_mutex ssl-cache


	#   SSL Cipher Suite:
	#   List the ciphers that the client is permitted to negotiate. See the
	#   ciphers(1) man page from the openssl package for list of all available
	#   options.
	#   Enable only secure ciphers:
	SSLCipherSuite HIGH:!aNULL

	# SSL server cipher order preference:
	# Use server priorities for cipher algorithm choice.
	# Clients may prefer lower grade encryption.  You should enable this
	# option if you want to enforce stronger encryption, and can afford
	# the CPU cost, and did not override SSLCipherSuite in a way that puts
	# insecure ciphers first.
	# Default: Off
	#SSLHonorCipherOrder on

	#   The protocols to enable.
	#   Available values: all, SSLv3, TLSv1, TLSv1.1, TLSv1.2
	#   SSL v2  is no longer supported
	SSLProtocol all -SSLv3

	#   Allow insecure renegotiation with clients which do not yet support the
	#   secure renegotiation protocol. Default: Off
	#SSLInsecureRenegotiation on

	#   Whether to forbid non-SNI clients to access name based virtual hosts.
	#   Default: Off
	#SSLStrictSNIVHostCheck On
SSLPassPhraseDialog  builtin
SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5
SSLHonorCipherOrder on
SSLSessionCache         "shmcb:/etc/apache2/logs/ssl_scache(512000)"
SSLSessionCacheTimeout  300
<VirtualHost _default_:443> 
ServerName Service.CarelCloud:443
ServerAdmin admin@remotevalue.com

SSLEngine on
SSLCipherSuite HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUM
SSLCertificateFile 7811371_service.carel-remote.com_public.crt
SSLCertificateKeyFile 7811371_service.carel-remote.com.key
SSLCertificateChainFile 7811371_service.carel-remote.com_chain.crt

BrowserMatch "MSIE [2-5]" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0

SSLProxyEngine On

SSLProxyVerify none
SSLProxyCheckPeerCN off
SSLProxyCheckPeerName off

ProxyHTMLExtended On
ProxyRequests Off
LogLevel error


# 需要启用一些模块，如proxy及其子模块 等等
####################################################################
# https://dlukes.github.io/flask-wsgi-url-prefix.html
# https://github.com/benoitc/gunicorn/issues/679
# http://albertoconnor.ca/hosting-django-under-different-locations.html
DirectoryIndex ./stmt/
<location /stmt>
AuthType None
Require all granted
ProxyPass http://127.0.0.1:5000/stmt
ProxyPassReverse "127.0.0.1:5000/stmt"
Header add SCRIPT_NAME "/stmt"
RequestHeader set SCRIPT_NAME "/stmt"
</location>
####################################################################

<location /server-status>
         SetHandler server-status
         Order Deny,Allow
         Deny from nothing
         Allow from all
</location>
####################################
<Location /wssh/ >
        ProxyPass  http://127.0.0.1:8888/
        ProxyPassReverse http://127.0.0.1:8888/
        ProxyPreserveHost On

# for websocket stuff
        RewriteEngine On
        #RewriteCond %{HTTP:Upgrade}  ^WebSocket$ [NC,OR]
        #RewriteCond %{HTTP:CONNECTION} Upgrade$ [NC,OR]
        RewriteRule /ws* ws://127.0.0.1:8888/ws$1 [P,L]
        # RewriteRule .*  ws://service.carel-remote.com:8888/ws$1 [P,L]
        # RewriteRule .*  ws://service.carel-remote.com/wssh/ws$1 [P,L]
        # RewriteRule ^/?(.*) "ws://https://service.carel-remote.com/wssh/$1" [P,L]

#RewriteCond %{HTTP:Upgrade} =websocket [NC]
#RewriteRule /wssh/(.) wss://127.0.0.1:8888/$1 [P,L]
#RewriteCond %{HTTP:Upgrade} !=websocket [NC]
#RewriteRule /wssh/(.) http://127.0.0.1:8888/$1 [P,L]

# rewrite response html to fix paths
        #AddOutputFilterByType SUBSTITUTE text/html
        #Substitute "s|static/js/|/wssh/static/js/|i"
        #Substitute "s|static/css/|/wssh/static/css/|i"
        #Substitute "s|static/img/|/wssh/static/img/|i"

</Location>
######################################
</VirtualHost>
</IfModule>
ExtendedStatus On

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
